plugins {
	id 'java'
	id 'idea'
	id "com.google.protobuf" version "0.8.9"
	id 'com.devsoap.vaadin-flow' version '1.1.1'
	id 'org.gretty' version '2.3.1'
}

group 'net.azry.p2pd'
version '1.0-SNAPSHOT'

vaadin.version = '13.0.4'

vaadin.submitStatistics = false

vaadin.autoconfigure()

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/java'
			srcDirs 'build/generated/source/proto/main/grpc'
		}
		proto {
			srcDirs '../protos'
		}
	}
}

repositories {
	mavenCentral()
	maven {
		url "http://maven.vaadin.com/vaadin-addons"
	}
}

dependencies {
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "com.vaadin:vaadin-login-flow:1.0.0"
    implementation "com.vaadin:vaadin-progress-bar-flow:1.1.1"
	implementation 'com.vaadin:vaadin-push:8.8.4'
	implementation "org.apache.shiro:shiro-core:1.2.4"
	implementation "org.apache.shiro:shiro-web:1.2.4"
	implementation "ch.qos.logback:logback-classic:1.1.3"
	implementation "mysql:mysql-connector-java:8.0.15"
	implementation "com.vaadin:vaadin-grid-flow:${vaadin.version}"
	implementation "com.vaadin:vaadin-dialog-flow:${vaadin.version}"

	implementation "org.vaadin.shiro:shiro-vaadin-integration:1.0.2"
	implementation "com.github.appreciated:app-layout-addon:3.0.0.beta4"

	compileOnly "javax.annotation:javax.annotation-api:1.2"

	// examples/advanced need this for JsonFormat
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

	implementation 'ch.qos.logback:logback-core:1.2.3'
	implementation 'ch.qos.logback:logback-classic:1.2.3'
	implementation 'org.slf4j:slf4j-api:1.7.26'

	implementation project(':core')

	runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

	testImplementation "io.grpc:grpc-testing:${grpcVersion}"
	testImplementation "junit:junit:4.12"
	testImplementation "org.mockito:mockito-core:2.25.1"
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
	}
	generateProtoTasks {
		all()*.plugins { grpc {} }
	}
}


clean {
	delete protobuf.generatedFilesBaseDir
}
